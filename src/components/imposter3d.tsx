'use client';
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.4 public/among_us/scene.gltf -t -r public
Author: Cesar_24 (https://sketchfab.com/Cesar_24)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/among-us-f391d46f6c814f85981ff0947b5bb68b
Title: Among Us
*/

import * as THREE from 'three';
import React, { useEffect, useRef } from 'react';
import { useGLTF, useAnimations, useEnvironment } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { useState } from 'react';
type GLTFResult = GLTF & {
  nodes: {
    Object_7: THREE.SkinnedMesh;
    Object_8: THREE.SkinnedMesh;
    Object_9: THREE.SkinnedMesh;
    Object_11: THREE.SkinnedMesh;
    Object_12: THREE.SkinnedMesh;
    Object_14: THREE.SkinnedMesh;
    GLTF_created_0_rootJoint: THREE.Bone;
  };
  materials: {
    MainplasticAlive: THREE.MeshStandardMaterial;
    MainVidrio: THREE.MeshStandardMaterial;
    MainBlack: THREE.MeshStandardMaterial;
    Black: THREE.MeshStandardMaterial;
  };
};

type ActionName = 'Walking';
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export function Imposter3d(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(
    '/among_us/scene.gltf'
  ) as GLTFResult;
  const { actions } = useAnimations<GLTFActions>(animations, group);
  //! animation mouse
  const [cursorPosition, setCursorPosition] = useState({ x: 0, y: 0 });

  useEffect(() => {
    function handleMouseMove(event) {
      setCursorPosition({ x: event.clientX, y: event.clientY });
    }

    window.addEventListener('mousemove', handleMouseMove);

    return () => {
      window.removeEventListener('mousemove', handleMouseMove);
    };
  }, []);

  function mapCursorPosition2(
    cursorPosition: { x: number; y: number },
    minX = 0,
    maxX = window.innerWidth,
    minY = 0,
    maxY = window.innerHeight
  ) {
    const rangeX = maxX - minX;
    const rangeY = maxY - minY;
    const mappedX = ((cursorPosition.x - minX) / rangeX) * 2 - 1 - 0.3;
    const mappedY = ((cursorPosition.y - minY) / rangeY) * 2 - 1;
    return { x: mappedX * 1, y: mappedY * 0.5 };
  }

  //! animation mouse
  // run animation
  // useEffect(() => {
  //   actions['Walking'].play();
  // });
  const envMap = useEnvironment({ files: '/among_us/studio.hdr' });
  return (
    <group
      ref={group}
      {...props}
      dispose={null}
      scale={2.5}
      position={[0, -1, 0]}
      // rotation={[cursorPosition.x, cursorPosition.y / 2, 0]}

      rotation={[
        mapCursorPosition2(cursorPosition).y,
        mapCursorPosition2(cursorPosition).x,
        0,
      ]}
    >
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group name="��liveArmature_54">
                <group name="GLTF_created_0">
                  <primitive object={nodes.GLTF_created_0_rootJoint} />
                  <group name="MainBody_51" />
                  <group name="Manos_52" />
                  <group name="Mochila_53" />
                  <skinnedMesh
                    name="Object_7"
                    geometry={nodes.Object_7.geometry}
                    material={materials.MainplasticAlive}
                    skeleton={nodes.Object_7.skeleton}
                  />
                  <skinnedMesh
                    name="Object_8"
                    geometry={nodes.Object_8.geometry}
                    material={materials.MainVidrio}
                    skeleton={nodes.Object_8.skeleton}
                  />
                  <skinnedMesh
                    name="Object_9"
                    geometry={nodes.Object_9.geometry}
                    material={materials.MainBlack}
                    skeleton={nodes.Object_9.skeleton}
                  />
                  <skinnedMesh
                    name="Object_11"
                    geometry={nodes.Object_11.geometry}
                    material={materials.MainplasticAlive}
                    skeleton={nodes.Object_11.skeleton}
                  />
                  <skinnedMesh
                    name="Object_12"
                    geometry={nodes.Object_12.geometry}
                    material={materials.Black}
                    skeleton={nodes.Object_12.skeleton}
                  />
                  <skinnedMesh
                    name="Object_14"
                    geometry={nodes.Object_14.geometry}
                    material={materials.MainplasticAlive}
                    skeleton={nodes.Object_14.skeleton}
                  />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('public/among_us/scene.gltf');
