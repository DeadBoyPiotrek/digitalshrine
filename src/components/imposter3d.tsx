'use client';
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.4 public/among_us/scene.gltf -t -r public
Author: Cesar_24 (https://sketchfab.com/Cesar_24)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/among-us-f391d46f6c814f85981ff0947b5bb68b
Title: Among Us
*/

import { motion } from 'framer-motion-3d';

import * as THREE from 'three';
import { useEffect, useRef } from 'react';
import { useAnimations, useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { useSpring } from 'framer-motion';
type ActionName = 'Walking';
// type GLTFActions = Record<ActionName, THREE.AnimationAction>;
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}
type GLTFResult = GLTF & {
  nodes: {
    Object_7: THREE.SkinnedMesh;
    Object_8: THREE.SkinnedMesh;
    Object_9: THREE.SkinnedMesh;
    Object_11: THREE.SkinnedMesh;
    Object_12: THREE.SkinnedMesh;
    Object_14: THREE.SkinnedMesh;
    GLTF_created_0_rootJoint: THREE.Bone;
  };
  materials: {
    MainplasticAlive: THREE.MeshStandardMaterial;
    MainVidrio: THREE.MeshStandardMaterial;
    MainBlack: THREE.MeshStandardMaterial;
    Black: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export function Imposter3d(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(
    'among_us/scene.gltf'
  ) as GLTFResult;
  const { actions } = useAnimations(animations, group);
  useEffect(() => {
    if (actions.Walking) actions?.Walking.play();
  });

  const startWalking = () => {
    actions?.Walking?.reset().fadeIn(0.5).play();
  };
  const stopWalking = () => {
    actions?.Walking?.fadeOut(1.5);
  };

  useEffect(() => {
    function handleMouseMove(event: MouseEvent) {
      springPropsX.set(mapCursorPositionX(event.clientX));
      springPropsY.set(mapCursorPositionY(event.clientY));
    }

    window.addEventListener('mousemove', handleMouseMove);

    return () => {
      window.removeEventListener('mousemove', handleMouseMove);
    };
  });

  const mapCursorPositionX = (cursorPositionX: number) => {
    const rangeX = window.innerWidth;
    const mappedX = (cursorPositionX / rangeX) * 2 - 1 - 0.3;
    return mappedX * 0.7;
  };
  const mapCursorPositionY = (cursorPositionY: number) => {
    const rangeY = window.innerHeight;
    const mappedY = (cursorPositionY / rangeY) * 2 - 1;
    return mappedY * 0.5;
  };

  const springPropsX = useSpring(0, {
    stiffness: 70,
    damping: 15,
  });
  const springPropsY = useSpring(0, {
    stiffness: 70,
    damping: 15,
  });

  return (
    <motion.group
      ref={group}
      {...props}
      dispose={null}
      scale={2.5}
      position={[0, -1, 0]}
      rotation={[springPropsY, springPropsX, 0]}
      className="bg-red-50"
    >
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group name="��liveArmature_54">
                <group name="GLTF_created_0">
                  <primitive object={nodes.GLTF_created_0_rootJoint} />
                  <group name="MainBody_51" />
                  <group name="Manos_52" />
                  <group name="Mochila_53" />
                  <skinnedMesh
                    onPointerEnter={stopWalking}
                    onPointerLeave={startWalking}
                    name="Object_7"
                    geometry={nodes.Object_7.geometry}
                    material={materials.MainplasticAlive}
                    skeleton={nodes.Object_7.skeleton}
                  />
                  <skinnedMesh
                    name="Object_8"
                    geometry={nodes.Object_8.geometry}
                    material={materials.MainVidrio}
                    skeleton={nodes.Object_8.skeleton}
                  />
                  <skinnedMesh
                    name="Object_9"
                    geometry={nodes.Object_9.geometry}
                    material={materials.MainBlack}
                    skeleton={nodes.Object_9.skeleton}
                  />
                  <skinnedMesh
                    name="Object_11"
                    geometry={nodes.Object_11.geometry}
                    material={materials.MainplasticAlive}
                    skeleton={nodes.Object_11.skeleton}
                  />
                  <skinnedMesh
                    name="Object_12"
                    geometry={nodes.Object_12.geometry}
                    material={materials.Black}
                    skeleton={nodes.Object_12.skeleton}
                  />
                  <skinnedMesh
                    name="Object_14"
                    geometry={nodes.Object_14.geometry}
                    material={materials.MainplasticAlive}
                    skeleton={nodes.Object_14.skeleton}
                  />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </motion.group>
  );
}

useGLTF.preload('among_us/scene.gltf');
